/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.1/userguide/building_java_projects.html
 */

plugins {
    id 'java-library'
    id 'checkstyle'
    id 'eclipse'
    id 'idea'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
}

checkstyle {
	//configFile = rootProject.file(".style/checkstyle.xml")
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

tasks.named('build') {
    dependsOn('idea', 'eclipse')
}

tasks.named('clean') {
    dependsOn('cleanIdea', 'cleanEclipse')
}

task runWithJavaExec(type: JavaExec) {
    doFirst {
        if (!project.hasProperty("args")) {
            throw new GradleException("A main class must be specified. Use -Pargs=<MainClassName>")
        }
    }
    dependsOn('build')
    group = 'Execution'
    description = 'Run the main class with JavaExecTask'
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty("args")) {
        main = project.property("args")
    }
}
